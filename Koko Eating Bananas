class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int low = 0;
        int high = findMax(piles);
        while(low <= high){
            int mid = low + ((high-low)/2);
            int totalh = findHours(piles,mid);
            if(totalh <= h){
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        return low;
    }
    public int findMax(int[] a){
        int max = Integer.MIN_VALUE;
        for(int i=0;i<a.length;i++){
            if(a[i] > max){
                max = a[i];
            }
        }
        return max;
    }
    public int findHours(int[] a,int mid){
        int hours = 0;
        for(int i=0;i<a.length;i++){
            hours += Math.ceil((double)a[i]/(double)mid);
        }
        return hours;
    }
}
